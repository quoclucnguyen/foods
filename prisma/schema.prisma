// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

model User {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  email         String         @unique
  password      String
  username      String         @unique
  role          Role           @default(USER)
  accessToken   String?        @unique @default("")
  isActive      Boolean        @default(true)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime?      @updatedAt
  createdBy     String?
  updatedBy     String?
  notifications Notification[]
}

enum Role {
  ADMIN
  USER
}

model Notification {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  userId     String
  title      String
  message    String
  isActive   Boolean   @default(true)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
  createdBy  String?
  updatedBy  String?
  foodItemId String?

  user User @relation(fields: [userId], references: [id])
}

model Location {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime   @default(now())
  updatedAt DateTime?  @updatedAt
  createdBy String?
  updatedBy String?
  isActive  Boolean    @default(true)
  name      String     @unique
  foodItems FoodItem[]
}

model FoodItem {
  id                 String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt          DateTime  @default(now())
  updatedAt          DateTime? @updatedAt
  createdBy          String?
  updatedBy          String?
  isActive           Boolean   @default(true)
  name               String
  locationId         String
  dateEnd            DateTime?
  duration           Int?
  location           Location  @relation(fields: [locationId], references: [id])
  isSendNotification Boolean   @default(false)
}

model FoodItemNotification {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  createdBy String?
  updatedBy String?
  isActive  Boolean   @default(true)

}
